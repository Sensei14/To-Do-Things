{"version":3,"sources":["Components/Form.js","Components/TodoItem.js","Components/FinishedTask.js","Components/Todo.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","className","onSubmit","submit","type","placeholder","onChange","handleChange","value","taskText","name","checked","prior","date","min","getDate","style","color","validMessage","width","border","TodoItem","isPriority","text","onClick","end","id","delete","FinishedTask","deleteTask","finishedTime","Todo","state","tasks","newTask","finishedTasks","e","newID","_newTask","_e$target","target","length","_this","setState","Object","defineProperty","_newTask3","handleSubmit","preventDefault","validateForm","task","toConsumableArray","push","_this$state$newTask","isTextCorrect","isDataCorrect","parseInt","filter","endTask","finishedTask","concat","getFullDate","Date","year","getFullYear","toString","month","getMonth","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","_this2","this","setTimeout","_this3","todoItems","map","src_Components_TodoItem","key","finishedItems","Components_FinishedTask","src_Components_Form","fontSize","fontWeight","reverse","slice","Component","App","Components_Todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.badeaba9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={props.submit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Dodaj Zadanie\"\r\n          onChange={props.handleChange}\r\n          value={props.taskText}\r\n          name=\"text\"\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={props.handleChange}\r\n          checked={props.prior}\r\n          name=\"isPriority\"\r\n        />\r\n        <label>Priorytet</label>\r\n        <br />\r\n        <label>Do kiedy zrobić: </label>\r\n        <input\r\n          type=\"date\"\r\n          onChange={props.handleChange}\r\n          value={props.date}\r\n          min={props.getDate()}\r\n          name=\"date\"\r\n        />\r\n        <br />\r\n        <span style={{ color: \"red\" }}>\r\n          {props.validMessage && props.validMessage}\r\n        </span>\r\n        <br />\r\n        <button className=\"btn btn-dark btn-block\">DODAJ</button>\r\n      </form>\r\n\r\n      <hr style={{ width: \"100%\", border: \".1mm solid #bab\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nconst TodoItem = props => {\r\n  const style = props.isPriority ? \"prior\" : \"nonprior\";\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className={style}>\r\n        <p>{props.text} </p>\r\n\r\n        <button\r\n          className=\"btn btn-outline-success\"\r\n          onClick={props.end}\r\n          id={props.id}\r\n        >\r\n          Zakończ zadanie\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-danger\"\r\n          onClick={props.delete}\r\n          id={props.id}\r\n          name=\"tasks\"\r\n        >\r\n          X\r\n        </button>\r\n        <br />\r\n        <span>Zrobić do: {props.date}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nconst FinishedTask = props => {\r\n  const style = props.isPriority ? \"prior\" : \"nonprior\";\r\n\r\n  return (\r\n    <div className=\"finished\">\r\n      <p className={style}>\r\n        {props.text} <span>(zrobić do: {props.date})</span>\r\n        <button\r\n          className=\"btn btn-outline-danger\"\r\n          name=\"finishedTasks\"\r\n          onClick={props.deleteTask}\r\n          id={props.id}\r\n        >\r\n          X\r\n        </button>\r\n        <br />\r\n        <span>Potwierdzenie wykonania: {props.finishedTime} </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishedTask;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport FinishedTask from \"./FinishedTask\";\r\n\r\nclass Todo extends Component {\r\n  state = {\r\n    tasks: [\r\n      {\r\n        id: 1,\r\n        text: \"Umyć naczynia\",\r\n        isPriority: false,\r\n        date: \"03-12-2019\",\r\n        finishedTime: \"\"\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Wynieść śmieci\",\r\n        isPriority: false,\r\n        date: \"30-12-2019\",\r\n        finishedTime: \"\"\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Zrobić obiad\",\r\n        isPriority: true,\r\n        date: \"03-10-2019\",\r\n        finishedTime: \"\"\r\n      }\r\n    ],\r\n\r\n    newTask: {\r\n      id: \"\",\r\n      text: \"\",\r\n      isPriority: false,\r\n      date: \"\",\r\n      finishedTime: \"\"\r\n    },\r\n    validMessage: \"\",\r\n    finishedTasks: []\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    const length = this.state.tasks.length;\r\n    let newID;\r\n    if (length === 0) {\r\n      newID = 0;\r\n    } else {\r\n      newID = this.state.tasks[length - 1].id + 1;\r\n    }\r\n\r\n    if (type === \"checkbox\") {\r\n      this.setState({\r\n        newTask: {\r\n          [name]: checked,\r\n          id: newID,\r\n          text: this.state.newTask.text,\r\n          date: this.state.newTask.date\r\n        }\r\n      });\r\n    } else if (type === \"date\") {\r\n      this.setState({\r\n        newTask: {\r\n          id: newID,\r\n          text: this.state.newTask.text,\r\n          isPriority: this.state.newTask.isPriority,\r\n          [name]: value\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newTask: {\r\n          id: newID,\r\n          [name]: value,\r\n          isPriority: this.state.newTask.isPriority,\r\n          date: this.state.newTask.date\r\n        }\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const valid = this.validateForm();\r\n\r\n    if (!valid) {\r\n      this.setState({\r\n        validMessage: \" W polu zadanie trzeba wpisać więcej niż 5 znaków! \"\r\n      });\r\n    } else {\r\n      const task = this.state.newTask;\r\n      const tasks = [...this.state.tasks];\r\n      tasks.push(task);\r\n      this.setState({\r\n        tasks,\r\n        newTask: { id: \"\", text: \"\", isPriority: false, date: this.getDate() },\r\n        validMessage: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { text, date } = this.state.newTask;\r\n    let isTextCorrect = false;\r\n    let isDataCorrect = false;\r\n\r\n    if (text.length > 5) {\r\n      isTextCorrect = true;\r\n    }\r\n\r\n    if (date !== \"\") {\r\n      isDataCorrect = true;\r\n    }\r\n\r\n    return isTextCorrect && isDataCorrect;\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.validMessage !== \"\")\r\n      setTimeout(() => {\r\n        this.setState({\r\n          validMessage: \"\"\r\n        });\r\n      }, 4000);\r\n  }\r\n\r\n  deleteTask = e => {\r\n    const name = e.target.name;\r\n    const id = parseInt(e.target.id);\r\n    let tasks = [...this.state.tasks];\r\n    let finishedTasks = [...this.state.finishedTasks];\r\n\r\n    if (name === \"tasks\") {\r\n      tasks = tasks.filter(task => task.id !== id);\r\n\r\n      this.setState({\r\n        tasks\r\n      });\r\n    } else if (name === \"finishedTasks\") {\r\n      finishedTasks = finishedTasks.filter(task => task.id !== id);\r\n\r\n      this.setState({\r\n        finishedTasks\r\n      });\r\n    }\r\n  };\r\n\r\n  endTask = e => {\r\n    let tasks = [...this.state.tasks];\r\n    const id = parseInt(e.target.id);\r\n    let finishedTask = tasks.filter(task => task.id === id);\r\n    tasks = tasks.filter(task => task.id !== id);\r\n\r\n    finishedTask[0].id = this.state.finishedTasks.length + 1;\r\n\r\n    let finishedTasks = [...this.state.finishedTasks];\r\n    finishedTasks = finishedTasks.concat(finishedTask);\r\n    finishedTasks[finishedTasks.length - 1].finishedTime = this.getFullDate();\r\n\r\n    this.setState({\r\n      tasks,\r\n      finishedTasks\r\n    });\r\n  };\r\n\r\n  getDate = () => {\r\n    let date = new Date();\r\n    let minDate;\r\n\r\n    let year = date.getFullYear().toString();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n      month = \"0\" + month.toString();\r\n    }\r\n\r\n    if (day < 10) {\r\n      day = \"0\" + day.toString();\r\n    }\r\n\r\n    minDate = year + \"-\" + month + \"-\" + day;\r\n\r\n    return minDate;\r\n  };\r\n\r\n  getFullDate = () => {\r\n    let date = new Date();\r\n    let fullDate;\r\n\r\n    let year = date.getFullYear().toString();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    if (month < 10) {\r\n      month = \"0\" + month.toString();\r\n    }\r\n\r\n    if (day < 10) {\r\n      day = \"0\" + day.toString();\r\n    }\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours.toString();\r\n    }\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes.toString();\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds.toString();\r\n    }\r\n\r\n    fullDate =\r\n      year +\r\n      \"-\" +\r\n      month +\r\n      \"-\" +\r\n      day +\r\n      \" | \" +\r\n      hours +\r\n      \":\" +\r\n      minutes +\r\n      \":\" +\r\n      seconds;\r\n\r\n    return fullDate;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      newTask: {\r\n        date: this.getDate(),\r\n        text: this.state.newTask.text,\r\n        isPriority: this.state.newTask.isPriority,\r\n        id: this.state.newTask.id\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const todoItems = this.state.tasks.map(task => (\r\n      <TodoItem\r\n        key={task.id}\r\n        id={task.id}\r\n        text={task.text}\r\n        isPriority={task.isPriority}\r\n        delete={this.deleteTask}\r\n        end={this.endTask}\r\n        date={task.date}\r\n      />\r\n    ));\r\n\r\n    const finishedItems = this.state.finishedTasks.map(task => (\r\n      <FinishedTask\r\n        key={task.id}\r\n        text={task.text}\r\n        isPriority={task.isPriority}\r\n        date={task.date}\r\n        finishedTime={task.finishedTime}\r\n        deleteTask={this.deleteTask}\r\n        id={task.id}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <Form\r\n          handleChange={this.handleChange}\r\n          submit={this.handleSubmit}\r\n          taskText={this.state.newTask.text}\r\n          prior={this.state.newTask.isPriority}\r\n          validMessage={this.state.validMessage}\r\n          getDate={this.getDate}\r\n          date={this.state.newTask.date}\r\n        />\r\n        <p style={{ fontSize: \"24px\", color: \"#ccc\", fontWeight: \"bold\" }}>\r\n          Lista zaplanowanych zadań:\r\n        </p>\r\n        {todoItems}\r\n\r\n        <hr style={{ width: \"100%\", border: \".1mm solid #bab\" }} />\r\n\r\n        <p\r\n          style={{\r\n            fontSize: \"24px\",\r\n            color: \"rgb(0 180 0)\",\r\n            fontWeight: \"bold\"\r\n          }}\r\n        >\r\n          Lista zakończonych zadań ({this.state.finishedTasks.length}):\r\n        </p>\r\n\r\n        {finishedItems.reverse().slice(0, 5)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./Components/Todo\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}